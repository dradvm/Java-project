/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package javaeproject.gui;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javaeproject.model.HealthRecord;
import javaeproject.dao.HealthRecordDAO;

/**
 *
 * @author DELL
 */
public class SelectRecordGUI extends javax.swing.JPanel {

    /**
     * Creates new form SelectRecord
     */
    public SelectRecordGUI() {
        initComponents();
        setOpaque(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableRecord = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        selectID = new javax.swing.JTextField();
        selectButton = new javax.swing.JButton();
        selectAllButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(620, 420));

        tableRecord.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tableRecord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RecordID", "PatientID", "Problem", "CreateDate"
            }
        ));
        jScrollPane1.setViewportView(tableRecord);

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel4.setText("Enter PatientID");

        selectButton.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        selectButton.setText("Select");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        selectAllButton.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        selectAllButton.setText("Select All");
        selectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(selectID, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(selectButton)
                .addGap(29, 29, 29)
                .addComponent(selectAllButton)
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(selectID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectButton)
                    .addComponent(selectAllButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
            String patientIDToSelect = selectID.getText();
            HealthRecordDAO healthRecordDAO = new HealthRecordDAO();
            List<HealthRecord> healthRecords = healthRecordDAO.getHealthRecordsByPatientID(patientIDToSelect);

            if (healthRecords.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No health records found for PatientID " + patientIDToSelect, "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                DefaultTableModel model = (DefaultTableModel) tableRecord.getModel();
                model.setRowCount(0); // Xóa tất cả các hàng hiện có trong bảng

                // Thêm thông tin bệnh án vào bảng
                for (HealthRecord healthRecord : healthRecords) {
                    model.addRow(new Object[]{
                    healthRecord.getRecordID(),
                    healthRecord.getPatientID(), // Lấy PatientID từ bảng HealthRecord
                    healthRecord.getProblem(),
                    healthRecord.getCreateDate()
                });
                }
            }
    }//GEN-LAST:event_selectButtonActionPerformed

    private void selectAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllButtonActionPerformed
        HealthRecordDAO healthRecordDAO = new HealthRecordDAO();
    List<HealthRecord> healthRecords = healthRecordDAO.getAllHealthRecords();

    if (healthRecords.isEmpty()) {
        JOptionPane.showMessageDialog(this, "No health records found.", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        DefaultTableModel model = (DefaultTableModel) tableRecord.getModel();
        model.setRowCount(0); // Xóa tất cả các hàng hiện có trong bảng

        // Thêm thông tin bệnh án vào bảng theo thứ tự RecordID, PatientID, Problem, CreateDate
        for (HealthRecord healthRecord : healthRecords) {
                model.addRow(new Object[]{
                healthRecord.getRecordID(),
                healthRecord.getPatientID(), // Lấy PatientID từ bảng HealthRecord
                healthRecord.getProblem(),
                healthRecord.getCreateDate()
            });
        }
    }
    }//GEN-LAST:event_selectAllButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton selectAllButton;
    private javax.swing.JButton selectButton;
    private javax.swing.JTextField selectID;
    private javax.swing.JTable tableRecord;
    // End of variables declaration//GEN-END:variables
}
